package com.chinanetwork.performance.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import com.chinanetwork.performance.bean.Department;
import com.chinanetwork.performance.bean.Post;
import com.chinanetwork.performance.bean.Role;
import com.chinanetwork.performance.bean.Staff;
import com.chinanetwork.performance.util.DataBaseUtil;

public class PostManageDao {

	public List<Post> getAllPost() throws Exception {
		List<Post> posts = null;

		String sql1 = " select post_id, post_name from post ";
		Connection connection = DataBaseUtil.getConnection();
		PreparedStatement preparedStatement = connection.prepareStatement(sql1);
		ResultSet rs = preparedStatement.executeQuery();

		while (rs.next()) {
			if (posts == null)
				posts = new ArrayList<Post>();
			Post post = new Post(rs.getInt("post_id"), rs
					.getString("post_name"));
			posts.add(post);
		}
		DataBaseUtil.close(rs, preparedStatement, connection);
		return posts;
	}
//----------------------------------------------------------------------------分页代码开始
	/**
	 * 获取总记录数
	 * @return
	 * @throws Exception
	 */
	public int getTotalRecored()throws Exception{
		int count=0;
		String sql="select count(*) crecored from post;";
		
		Connection  connection=null;
		PreparedStatement preparedStatement=null;
		ResultSet resultSet=null;
		
		try{
			connection=DataBaseUtil.getConnection();
			preparedStatement=connection.prepareStatement(sql);
			resultSet=preparedStatement.executeQuery();
			
			if(resultSet.next()){
				count=resultSet.getInt("crecored");
			}
		}catch(Exception e){
			e.printStackTrace();
		}finally{
			DataBaseUtil.close(resultSet, preparedStatement, connection);
		}
		return count;
	}
	
	public List<Post> getAllPosts(int pageStart,int pageSize)throws Exception{
		List<Post> posts = new ArrayList<Post>();
		String sql=" select post_id, post_name from post limit ?,?";
		Connection  connection=null;
		PreparedStatement preparedStatement=null;
		ResultSet resultSet=null;
		
		try{
			connection=DataBaseUtil.getConnection();
			preparedStatement=connection.prepareStatement(sql);
			preparedStatement.setInt(1, pageStart);
			preparedStatement.setInt(2, pageSize);
			resultSet=preparedStatement.executeQuery();
			
			while(resultSet.next()){
				Post post = new Post(resultSet.getInt("post_id"), resultSet
						.getString("post_name"));
				posts.add(post);
			}
		}catch(Exception e){
			e.printStackTrace();
		}finally{
			DataBaseUtil.close(resultSet, preparedStatement, connection);
		}
		
		return posts;
	}
//----------------------------------------------------------------------------分页代码结束
	public void addPost(Post post) throws Exception {
		String sql1 = " insert into post(post_name) values(?) ;";
		Connection conn = null;
		PreparedStatement ps = null;

		conn = DataBaseUtil.getConnection();
		ps = conn.prepareStatement(sql1);
		ps.setString(1, post.getPostName());
		ps.executeUpdate();

		DataBaseUtil.close(ps, conn);
	}

	public void deletePost(int parseInt) throws Exception {
		// TODO Auto-generated method stub
		String sql1 = " delete from post where post_id = ? ";
		Connection conn = null;
		PreparedStatement ps = null;

		conn = DataBaseUtil.getConnection();
		ps = conn.prepareStatement(sql1);
		ps.setInt(1, parseInt);
		ps.executeUpdate();

		DataBaseUtil.close(ps, conn);

	}

	public Post getPostById(int id) throws Exception {
		Post post = null;
		String sql1 = " select post_id, post_name from post where post_id=? ";
		Connection connection = DataBaseUtil.getConnection();
		PreparedStatement preparedStatement = connection.prepareStatement(sql1);
		preparedStatement.setInt(1, id);
		ResultSet rs = preparedStatement.executeQuery();

		if (rs.next()) {
			post = new Post(rs.getInt("post_id"), rs.getString("post_name"));
		}

		DataBaseUtil.close(rs, preparedStatement, connection);
		return post;

	}

	public void modifyPostById(int id, Post postToModify) throws Exception {
		// TODO Auto-generated method stub
		String sql1 = " update post set post_id = ?, post_name = ? where post_id = ? ";
		Connection conn = null;
		PreparedStatement ps = null;

		conn = DataBaseUtil.getConnection();
		ps = conn.prepareStatement(sql1);
		ps.setInt(1, id);
		ps.setString(2, postToModify.getPostName());
		ps.setInt(3, postToModify.getPostId());
		ps.executeUpdate();

		DataBaseUtil.close(ps, conn);

	}


	/***
	方法：
	副总2：副主任4
	主任3：副主任4，员工5
	副主任4：员工5

	区副经理7：副科长9
	科长8：副科长9，员工10
	副科长9：员工10
	***/

	public List<Staff> getScoreStaffsByPostId(Staff staff) throws Exception {

		StaffManageDao staffManageDao = new StaffManageDao();
		List<Staff> staffs = null;
		Connection connection = DataBaseUtil.getConnection();
		PreparedStatement ps = null;
		ResultSet rs = null;

		switch (staff.getPost().getPostId()) {
		case 2: //副总2：副主任4
		{
			String sql1 = "select staff_id from staff where department_id in "+
						"(select department_id from department where higher_department_id = ?) "+
						"and post_id = 4;";
			//String sql2 = "select a.staff_id from staff a, department b "+
			//			"where a.department_id = b.department_id "+
			//			"and b.higher_department_id = ? "+
			//			"and a.post_id = 4;"
			ps = connection.prepareStatement(sql1);
			ps.setInt(1, staff.getDepartment().getDepartmentId());
			rs = ps.executeQuery();
			break;
		}
		case 3: //主任3：副主任4，员工5
		{
			String sql1 = "select staff_id from staff where department_id=? "+
						"and staff_id <> ? and (post_id = 4 or post_id = 5);";
			ps = connection.prepareStatement(sql1);
			ps.setInt(1, staff.getDepartment().getDepartmentId());
			ps.setInt(2, staff.getStaffId());
			rs = ps.executeQuery();
			break;
		}
		case 4: //副主任4：员工5
		{
			String sql1 = "select staff_id from staff where department_id=? and post_id = 5;";
			ps = connection.prepareStatement(sql1);
			ps.setInt(1, staff.getDepartment().getDepartmentId());
			rs = ps.executeQuery();
			break;
		}
		case 7: //区副经理7：副科长9
		{
			String sql1 = "select staff_id from staff where department_id in "+
						"(select department_id from department where higher_department_id = ?) "+
						"and post_id = 9;";
			ps = connection.prepareStatement(sql1);
			ps.setInt(1, staff.getDepartment().getDepartmentId());
			rs = ps.executeQuery();
			break;
		}
		case 8: //科长8：副科长9，员工10
		{
			String sql1 = "select staff_id from staff where department_id=? and staff_id <> ? and (post_id = 9 or post_id = 10)";
			ps = connection.prepareStatement(sql1);
			ps.setInt(1, staff.getDepartment().getDepartmentId());
			ps.setInt(2, staff.getStaffId());
			rs = ps.executeQuery();
			break;
		}
		case 9: //副科长9：员工10
		{
			String sql1 = "select staff_id from staff where department_id=? and post_id = 10;";
			ps = connection.prepareStatement(sql1);
			ps.setInt(1, staff.getDepartment().getDepartmentId());
			rs = ps.executeQuery();
			break;
		}

		default:
			break;

		}

		while (rs != null && rs.next()) {
				if (staffs == null)
					staffs = new ArrayList<Staff>();
				Staff sf = staffManageDao.getStaffById(rs.getInt("staff_id"));
				staffs.add(sf);
		}

		return staffs;
	}
	
	
	/**
	 * 找出所有参与部门互评的部门
	 * post_id 1,2,3  6,7
	 * @return
	 */
	public List<Department> getAllDepartmentScoreDepartment()throws Exception{
		List<Department> departmentList=new ArrayList<Department>();
		String sql="select d.department_id,d.department_name,d.higher_department_id " +
				"from staff s,department d,post p " +
				"where s.department_id=d.department_id and s.post_id=p.post_id " +
				"and p.post_id in (1,2,3,6,7)";
		
		Connection connection=null;
		PreparedStatement preparedStatement=null;
		ResultSet resultSet=null;
		
		try{
			connection=DataBaseUtil.getConnection();
			preparedStatement=connection.prepareStatement(sql);
			resultSet=preparedStatement.executeQuery();
			
			while(resultSet.next()){
				Department deparment=new Department(resultSet.getInt("d.department_id"),resultSet.getString("d.department_name"),resultSet.getInt("d.higher_department_id"));
				departmentList.add(deparment);
			}
		}catch(Exception e){
			e.printStackTrace();
		}finally{
			DataBaseUtil.close(resultSet, preparedStatement, connection);
		}
		return departmentList;
	}
	
	/*有个人打分权限的  2,3,4, 7,8,9
	 * 
	 * */
	
	public List<Staff> getOwnScorePermissionsStaffs()throws Exception{
		
		StaffManageDao staffManageDao = new StaffManageDao();
		List<Staff> staffList=new ArrayList<Staff>();
		String sql = "select staff_id from staff where post_id in(2,3,4,7,8,9);";
		Connection connection=null;
		PreparedStatement preparedStatement=null;
		ResultSet resultSet=null;
		
		try{
			connection=DataBaseUtil.getConnection();
			preparedStatement=connection.prepareStatement(sql);
			resultSet=preparedStatement.executeQuery();
			
			while(resultSet.next()){
				Staff staff=staffManageDao.getStaffById(resultSet.getInt("staff_id"));
				staffList.add(staff);
			}
		}catch(Exception e){
			e.printStackTrace();
		}finally{
			DataBaseUtil.close(resultSet, preparedStatement, connection);
		}
		return staffList;
	}
	

}
